
CREATE DATABASE FUNCTION_PRACTICE_DB

USE FUNCTION_PRACTICE_DB


-- EXAMPLE FOR SCALAR VALUE RETURNING FUNCTION (SCALAR :  SINGULAR VALUES)
-- REQUIREMENT 1:  WRITE A FUNCTION TO COMPUTE SUM OF THREE NUMBERS ?		-- SCALAR VALUE RETURNING FUNCTIONS
 
 CREATE FUNCTION fnComputeSum (@Input1 int, @Input2 int, @Input3 int)
 RETURNS INT
 AS
 BEGIN
 DECLARE @SUM INT
 SET @SUM  = @Input1 + @Input2 + @Input3
 RETURN (@SUM)
 END


 SELECT DBO.fnComputeSum(1, 1, 1)
 SELECT DBO.fnComputeSum(1, 1, 1) AS COMPUTEDSUM

   

-- EXAMPLE FOR INLINE TABLE VALUE RETURNING FUNCTION?
-- REQUIREMENT 2: GIVEN A COURSE NAME, HOW TO REPORT LIST OF ALL STUDENTS?

CREATE TABLE tblCourses
(
COURSE_ID INT UNIQUE,				
COURSE_NAME VARCHAR(30) NOT NULL,	
COURSE_DUR INT CHECK (COURSE_DUR = 120 OR COURSE_DUR = 180)	
)
INSERT INTO tblCourses VALUES (101, 'COMPUTERS', 120), (102, 'ROBOTICS', 120), (103, 'CIVIL', 180)
 

CREATE TABLE tblStudent
(
StdID INT PRIMARY KEY,				
StdName VARCHAR(30) NOT NULL,		
StdAge  int CHECK (StdAge >= 18),		
StdCourse INT REFERENCES tblCourses(COURSE_ID)	
)

INSERT INTO tblStudent VALUES (1001, 'SAI', 39, 101), (1002, 'AMI', 39, 101), (1003, 'AMIN', 39, 101)
INSERT INTO tblStudent VALUES (1004, 'JOHN', 39, 102),(1005, 'JEFFERY', 39, 102)


SELECT * FROM tblCourses;
SELECT * FROM tblStudent;


-- REPORT LIST OF ALL STUDENTS IN A ALL COURSES?
SELECT * FROM tblCourses
JOIN
tblStudent
ON
tblCourses.COURSE_ID = tblStudent.STDCOURSE 


-- REPORT LIST OF ALL STUDENTS IN COMPUTERS COURSES?
SELECT * FROM tblCourses
JOIN
tblStudent
ON
tblCourses.COURSE_ID = tblStudent.STDCOURSE 
WHERE tblCourses.COURSE_NAME = 'COMPUTERS'


-- REPORT LIST OF ALL STUDENTS IN A GIVEN COURSES?
CREATE FUNCTION fnReportStudents (@CourseName varchar(30))
RETURNS table 
AS
RETURN 
(
SELECT * FROM tblCourses
JOIN
tblStudent
ON
tblCourses.COURSE_ID = tblStudent.STDCOURSE 
WHERE tblCourses.COURSE_NAME = @CourseName
)

SELECT * FROM fnReportStudents ('COMPUTERS')

SELECT * FROM fnReportStudents ('ROBOTICS')



-- WRITE A FUNCTION TO REPORT  ALPHANUMERIC VALUES ?			SQL1, SQL2, SQL3 ..... 
-- EXAMPLE FOR MULTI LINE TABLE VALUE RETURNING FUNCTION 
CREATE FUNCTION FN_REPORT_SEQVALUES (@START INT, @END INT)
RETURNS @TABVAR TABLE (SeqVal VARCHAR(30))		--	@TABVAR IS A TABLE VARIABLE. TO STORE TABLE DATA IN MEMORY, TEMPDB
AS
BEGIN
DECLARE @INDEX INT
SET @INDEX  = @START
WHILE	@INDEX <= @END			-- AS LONG AS INDEX VALUE IS LESS THAN END VALUE
BEGIN
INSERT INTO @TABVAR VALUES (@INDEX)
SET @INDEX = @INDEX + 1
END
RETURN 
END 

-- HOW TO EXECUTE ABOVE FUNCTION?
SELECT * FROM FN_REPORT_SEQVALUES (1, 100)




ALTER FUNCTION FN_REPORT_SEQVALUES (@START INT, @END INT)
RETURNS @TABVAR TABLE (SeqVal VARCHAR(30))
AS
BEGIN
DECLARE @INDEX INT
SET @INDEX  = @START
WHILE	@INDEX <= @END			-- AS LONG AS
BEGIN
INSERT INTO @TABVAR VALUES ('SQL' + CONVERT(VARCHAR(30), @INDEX))
SET @INDEX = @INDEX + 1
END
RETURN 
END 

SELECT * FROM FN_REPORT_SEQVALUES (1, 100)


task- Use example three get other parameter like (a,b,c,d etc)SS
