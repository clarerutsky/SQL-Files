
-- HOW TO AUDIT LONG RUNNING QUERIES ?
	-- METHOD 1: USING ACTIVITY MONITOR (AM) TOOL. THIS TOOL IS AUTO INSTALLED WITH SQL SERVER MANAGEMENT STUDIO.
	-- METHOD 2: USING "PROCEDURE CACHE"- A MEMORY LOCATION TO STORE QUERY EXECUTION PLANS. 


-- METHOD 1:	USING ACTIVITY MONITOR (AM) TOOL
	LAUNCH SSMS > CONNECT TO SQL SERVER > RIGHT CLICK SERVER > ACTIVITY MONITOR
	THEN WE SEE THE METRICS or COUNTERS FOR :
				1. PROCESSOR USAGE	
				2. WAITING TASKS
				3. DATABASE I/O
				4. BATCH REQUESTS / SECOND
				5. RECENT EXPENSIVE QUERIES				: SUCH QUERIES THAT WERE COMPLETED RECENTLY. USED MORE QUERY RESOURCES.
				6. ACTIVE EXPENSIVE QUERIES				: SUCH QUERIES THAT WERE STILL RUNNING. USING MORE QUERY RESOURCES.

	-- RUN THIS BELOW TEST QUERY:
SELECT * INTO TESTABLE1 FROM SYSMESSAGES   -- NEW TABLE "TEST" IS CREATED


-- METHOD 2: USING PROCEDURE CACHE 
SELECT * FROM SYS.DM_EXEC_QUERY_STATS		-- THIS DMV WILL REPORT ALL QUERIES THAT RUN IN THE SERVER SINCE IT STARTED


SELECT TOP 10 * FROM SYS.DM_EXEC_QUERY_STATS	

SELECT TOP 10 * FROM SYS.DM_EXEC_QUERY_STATS	ORDER BY  total_worker_time / execution_count desc

SELECT TOP 10 plan_handle,  total_worker_time / execution_count AS AVG_EXEC_TIME  FROM SYS.DM_EXEC_QUERY_STATS	ORDER BY  AVG_EXEC_TIME DESC


-- FROM ABOVE, ACTUAL QUERY (TEXT) IS MISSING. 

-- GIVEN A PIRTICULAR PLAN HANDLE, HOW TO REPORT / EXTRACT THE ACTUAL QUERY?
-- FOR THIS, WE NEED TO USE ONE DMF : DYNAMIC MANAGEMENT FUNCTION
SELECT * FROM SYS.DM_EXEC_SQL_TEXT(0x06000100B1562124503C5671F501000001000000000000000000000000000000000000000000000000000000)


-- COMBINING TABLES OR VIEWS WITH FUNCTION : WE NEED TO USE CROSS APPLY
-- HOW TO REPORT TOP 10 LONG RUNNING QUERIES ?
SELECT TOP 10 plan_handle,  total_worker_time / execution_count AS AVG_EXEC_TIME  FROM SYS.DM_EXEC_QUERY_STATS	
CROSS APPLY sys.DM_EXEC_SQL_TEXT(plan_handle)
ORDER BY  AVG_EXEC_TIME DESC
 

-- HOW TO STORE ABOVE QUERY IN THE VIEW?
CREATE VIEW VW_QUERYSTORE
AS
SELECT TOP 10 plan_handle,  total_worker_time / execution_count AS AVG_EXEC_TIME  FROM SYS.DM_EXEC_QUERY_STATS	
CROSS APPLY sys.DM_EXEC_SQL_TEXT(plan_handle)
ORDER BY  AVG_EXEC_TIME DESC







SELECT TOP 10 plan_handle,  total_worker_time / execution_count AS AVG_EXEC_TIME, text  FROM SYS.DM_EXEC_QUERY_STATS	
CROSS APPLY sys.DM_EXEC_SQL_TEXT(plan_handle)
ORDER BY  AVG_EXEC_TIME DESC
 

