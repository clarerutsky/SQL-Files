/*
TEMPDB:	
	THIS IS ONE OF THE SYSTEM DATABASES. 
	USED FOR TEMPORARY DATA STORAGE. FOR FASTER CALCULATIONS, SORTING & REPORTING. 

	WE CAN CREATE TABLES INSIDE THIS TEMPDB. 
	SUCH TABLES ARE CALLED "TEMPORARY TABLES" = "TEMP TABLES" .

	SCOPE (LIFE) OF TEMP TABLES:	
	UNLIKE THE PERMANENT TABLES, THESE TEMP TABLES EXIST UNTIL END OF THE SESSION ONLY.
	ONCE WE CLOSE THE SESSION (QUERY WINDOW), THE TEMP TABLES ARE AUTO DROPPED FROM TEMPDB.

	TYPES OF TEMPORARY TABLES:
	1. LOCAL TEMPORARY TABLES:		ACCESSIBLE WITHIN THE SESSION (SAME QUERY WINDOW)			
									THEIR NAMES SHOULD HAVE  "#" PREFIX. 

	2. GLOBAL TEMPORARY TABLES:		ACCESSIBLE ACROSS THE ENTIRE SERVER CONNECTION (ALL SESSIONS)	
									THEIR NAMES SHOULD HAVE  "##" PREFIX. 

*/
-- EXAMPLES:
-- YOU CAN CONNECT TO ANY DATABASE AND THEN CREATE THE THESE TEMP TABLES. 


-- EXAMPLE FOR LOCAL TEMPORARY TABLE: 
CREATE TABLE #TABLE1							 -- you create a local temp table. you only can acccess.
(
COL1 INT, 
COL2 INT
)			

INSERT INTO #TABLE1 VALUES (1,1), (2,2), (3,3)
SELECT * FROM #TABLE1


-- EXAMPLE FOR GLOBAL TEMPORARY TABLE: 
CREATE TABLE ##TABLE2							-- you create a GLOBAL temp table. entire team can acccess.
(
COL1 INT, 
COL2 INT
)			

INSERT INTO ##TABLE2 VALUES (1,1), (2,2), (3,3)
SELECT * FROM ##TABLE2


-- HOW TO ACCESS GLOBAL TEMP TABLE BY OTHERS (OTHER SESSIONS)?
-- FROM SSMS : FILE > NEW > QUERY > WRITE BELOW QUERIES:
SELECT * FROM #TABLE1   -- ERROR. REASON: THIS IS LOCAL TEMP TABLE

SELECT * FROM ##TABLE2  -- NO ERROR. REASON : THIS IS GLOBAL TEMPORARY TABLE.

-- NOTE: THESE TEMPORARY TABLES ARE ACCESSIBLE ONLY AS LONG AS THE SESSION IS OPEN. 
-- ONCE WE CLOSE THE SESSION, THE TEMP TABLES ARE NO LONGER AVAILABLE. THEY ARE AUTO DROPPED FROM TEMPDB.


-- HOW TO SUBMIT ABOVE TABLE DATA TO OUR CLIENT?
CREATE DATABASE CLIENT_DB

USE CLIENT_DB 

-- HOW  TO COPY THE CONTENT FROM ONE TABLE TO ANOTHER ?

-- OPTION 1:  YOU CREATE THE TABLE FIRST. THEN COPY DATA FROM SOURCE TABLE TO THIS NEW TABLE
CREATE TABLE CLIENT_TABLEV1			-- HERE, NO #. SO IT IS A PERMENANT TABLE.
(
COL1 INT, 
COL2 INT
)		

INSERT INTO CLIENT_TABLEV1 SELECT * FROM ##TABLE2
SELECT * FROM CLIENT_TABLEV1 



-- OPTION 2:  YOU CREATE AUTO CREATE THE TABLE, AUTO INSERT THE DATA FROM SOURCE TABLE TO TARGET. BULK INSERT.
SELECT * INTO CLIENT_TABLEV2 FROM ##TABLE2 


-- HOW TO VERIFY THE DATA FROM ABOVE TABLE TABLE(S)?
SELECT * FROM CLIENT_TABLEV1
SELECT * FROM CLIENT_TABLEV2