-- TASK 1:  CREATE A DATABASE CALLED  "UNIVERSITY_DATABASE"
CREATE DATABASE 	UNIVERSITY_DATABASE


-- TASK 2:  CONNECT TO ABOVE DATABASE
USE UNIVERSITY_DATABASE


/* TASK 3:	 CREATE A TABLE CALLED "COURSES" TABLE AND STORE (INSERT) BELOW DATA:
			COURSE_ID		COURSENAME			COURSE_DURATION
			-----------------------------------------------------------------------
			101			COMPUTERS				180
			102			ROBOTICS				180
			103			CIVIL					180
			104			MECHATRONICS				120 */

CREATE TABLE COURSES
(
COURSE_ID INT,
COURSE_NAME VARCHAR(30),
COURSE_DURATION TINYINT			-- THIS DATA TYPE IS USED TO STORE SMALLER INTEGER VALUES (RANGE: 0 TO 255)
)

INSERT INTO COURSES VALUES (101, 'COMPUTERS', 180)
INSERT INTO COURSES VALUES (102, 'ROBOTICS', 180)
INSERT INTO COURSES VALUES (103, 'CIVIL', 180)
INSERT INTO COURSES VALUES (104, 'MECHATRONICS', 120)


-- TASK 4:	WRITE A QUERY TO REPORT ALL COURSES WITH NAMES STARTING WITH LETTER 'C' ?
SELECT * FROM COURSES WHERE COURSE_NAME LIKE 'C%'


-- TASK 5:	WRITE A QUERY TO REPORT ALL COURSES WITH NAMES ENDING WITH LETTER 'S' ?
SELECT * FROM COURSES WHERE COURSE_NAME LIKE '%S'

-- TASK 6:	WRITE A QUERY TO REPORT ALL COURSES WITH DURATION ABOVE 150 ?
SELECT * FROM COURSES WHERE COURSE_DURATION > 150

-- TASK 7:	WRITE A QUERY TO REPORT ALL COURSES WITH DURATION ABOVE 150  OR BELOW 130 ?
SELECT * FROM COURSES WHERE COURSE_DURATION > 150 OR COURSE_DURATION < 130

-- TASK 8:	WRITE A QUERY TO REPORT THE MAXIMUM DURATION OUT OF ALL COURSES ? 
SELECT MAX(COURSE_DURATION) FROM COURSES 

TASK 9:	WRITE A QUERY TO REPORT ALL COURSES THAT HAVE MAXIMUM DURATION?
SELECT * FROM COURSES  WHERE COURSE_DURATION  =  (SELECT MAX(COURSE_DURATION) FROM COURSES)

TASK 10:WRITE A QUERY TO REPORT ALL COURSES THAT HAVE MAXIMUM DURATION AND THEIR NAME SHOULD START WITH LETTER 'C'? 
SELECT * FROM COURSES  WHERE COURSE_DURATION  =  (SELECT MAX(COURSE_DURATION) FROM COURSES) AND COURSE_NAME LIKE 'C%'