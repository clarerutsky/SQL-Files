
/*
Things to do:
1. Understand the database. 
		STEP 1:		RUN THE GIVEN SCRIPTS IN SSMS TO GET THE SAMPLE DATABASE
		STEP 2:		DESIGN DATABASE DIAGRAM AND IDENTIFY RELATIONS
		STEP 3:		RUN METATADA COMMANDS AND FIND THE SIZE OF DATABASE & TABLES (SP_HELP..)

Give recommendations on DB Design towards best possible performance. 
		STEP 4:		DESIGN THE TABLES WITH SCHEMAS & FILEGROUPS

2. Give recommendations on Table Design towards best possible performance. 
		STEP 5:		INCLUDE CONSTRAINTS AND KEYS WHEREVER POSSIBLE
					EX: SALES_DATA TABLE DOES NOT HAVE PK. CREATE ONE.

3. Give recommendations on possible tuning options for EACH query
*/

USE [PRODUCTDATABASE]


-- QUERY  #1: HOW TO REPORT PRODUCT WISE TOTAL SALES? 
SELECT *
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey

-- RECOMMENDATION 1	:	 AVOID USING *.  USE INDIVIDUAL TABLES
-- RECOMMENDATION 2	:	 DEFINE A NONCLUSTERED INDEX ON SALES_DATA.ProductKey




-- QUERY #2
SELECT EnglishProductName, SalesAmount
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey


-- QUERY #3
SELECT EnglishProductName, SUM(SalesAmount)
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName


-- QUERY #4
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName



-- QUERY #5 : HOW TO REPORT PRODUCT WISE TOTAL SALES ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING SUM(SalesAmount) > 1000


-- QUERY #6 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000



-- QUERY #7 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY SUM(SalesAmount) DESC						


-- QUERY #8 : HOW TO REPORT PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY 2 DESC					-- ORDERING THE DATA BY USING COLUMN CARDINAL POSITION. 


-- QUERY 9:  WRITE A QUERY TO REPORT SUM OF SALES AND TAX FOR PRODUCTS WITH MAXIMUM DEALER PRICE ?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
WHERE							-- FOR CONDITIONS ON NON-AGGREGATE COLUMNS
PRODUCTS_DATA.DealerPrice 
		IN ( SELECT MAX(DealerPrice) FROM PRODUCTS_DATA)
GROUP BY EnglishProductName
HAVING							-- FOR CONDITIONS ON AGGREGATE COLUMNS
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000
ORDER BY 3 DESC


-- QUERY 10: QUERY TO REPORT SUM OF SALES, TAX FOR PRODUCTS WITH MAXIMUM DEALER PRICE BUT NOT FOR MINIMAL COST ?
SELECT EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
WHERE
PRODUCTS_DATA.DealerPrice 
		IN (	SELECT MAX(DealerPrice) FROM PRODUCTS_DATA 
				WHERE  LISTPRICE 
					NOT IN ( SELECT MIN(LISTPRICE) FROM PRODUCTS_DATA ) )
GROUP BY EnglishProductName
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000



-- QUERY #11 : HOW TO REPORT YEAR WISE, CUSTOMER WISE, PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?

SELECT CalendarYear, EnglishProductName, SUM(SalesAmount) AS TOTAL_SALES, SUM(TAXAMT) AS TOTAL_TAX
FROM SALES_DATA 
INNER JOIN
PRODUCTS_DATA
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey
INNER JOIN
TIME_DATA 
ON
TIME_DATA.TimeKey = SALES_DATA.OrderDateKey
GROUP BY CalendarYear, EnglishProductName 
HAVING 
SUM(SalesAmount) > 1000  AND SUM(TAXAMT)  > 1000



-- QUERY 12: HOW TO SAVE ABOVE QUERY?
CREATE VIEW VW_SALES_TAX_REPORT
AS
SELECT T.CalendarYear, C.GENDER,  P.EnglishProductName, SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S 
INNER JOIN
PRODUCTS_DATA AS P
ON
S.ProductKey = P.ProductKey
INNER JOIN
TIME_DATA  AS T
ON
T.TimeKey = S.OrderDateKey
INNER JOIN
CUSTOMERS_DATA AS C
ON
S.CustomerKey = C.CUSTOMERKEY
GROUP BY T.CalendarYear, P.EnglishProductName, C.GENDER 