
CREATE DATABASE EMP_DB 

USE EMP_DB 
  
CREATE TABLE EMPLOYEE_DETAILS
(
EmpID int UNIQUE,
EmpName varchar(30) NOT NULL,
EmpManagerID int REFERENCES EMPLOYEE_DETAILS (EmpID)		-- SELF REFERENCING KEY : A TABLE RELATED TO ITSELF.
)


INSERT INTO EMPLOYEE_DETAILS VALUES (1001, 'JOHN', NULL)
INSERT INTO EMPLOYEE_DETAILS VALUES (1002, 'JENY', 1001)		-- JOHN IS THE MANAGER FOR THIS EMPLOYEE
INSERT INTO EMPLOYEE_DETAILS VALUES (1003, 'JESSI',1001)		-- JOHN IS THE MANAGER FOR THIS EMPLOYEE
INSERT INTO EMPLOYEE_DETAILS VALUES (1004, 'AMI', 1002)			-- JENY IS THE MANAGER FOR THIS EMPLOYEE
INSERT INTO EMPLOYEE_DETAILS VALUES (1005, 'AMIN',1002)			-- JENY IS THE MANAGER FOR THIS EMPLOYEE
INSERT INTO EMPLOYEE_DETAILS VALUES (1006, 'AMINI', 1002)		-- JENY IS THE MANAGER FOR THIS EMPLOYEE
INSERT INTO EMPLOYEE_DETAILS VALUES (1007, 'AMINISH',1003)		-- JESSI IS THE MANAGER FOR THIS EMPLOYEE

SELECT * FROM EMPLOYEE_DETAILS

-- HOW TO REPORT LIST OF EMPLOYEES AND RESPECTIVE MANAGERS?
SELECT * FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 


-- HOW TO REPORT LIST OF EMPLOYEES AND RESPECTIVE MANAGERS?
SELECT E1.EmpID AS EMPLOYEE_ID, E1.EmpName AS EMPLOYEE_NAME, E2.EmpID AS MANAGER_ID, E2.EmpName AS MANAGER_NAME FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 


-- HOW TO REPORT LIST OF EMPLOYEES AND RESPECTIVE MANAGERS?
SELECT E1.EmpID AS EMPLOYEE_ID, E1.EmpName AS EMPLOYEE_NAME, E2.EmpName AS MANAGER_NAME FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 


-- HOW TO REPORT JOHN (BOSS) ?
SELECT * FROM EMPLOYEE_DETAILS WHERE EmpManagerID IS NULL

SELECT EmpID, EmpName, 'N/A' AS MANAGERNAME  FROM EMPLOYEE_DETAILS WHERE EmpManagerID IS NULL


-- FINAL OUTPUT: COMBINING ABOVE TWO QUERIES:
SELECT EmpID, EmpName, 'N/A' AS MANAGERNAME  FROM EMPLOYEE_DETAILS WHERE EmpManagerID IS NULL
UNION 
SELECT E1.EmpID AS EMPLOYEE_ID, E1.EmpName AS EMPLOYEE_NAME, E2.EmpName AS MANAGER_NAME FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 


SELECT EmpID, EmpName, 'N/A' AS MANAGERNAME  FROM EMPLOYEE_DETAILS WHERE EmpManagerID IS NULL
UNION  ALL
SELECT E1.EmpID AS EMPLOYEE_ID, E1.EmpName AS EMPLOYEE_NAME, E2.EmpName AS MANAGER_NAME FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 


-- UNION	:	TO COMBINE MULTIPLE TABLES OR QUERIES THAT HAVE SIMILAR RESULT (SAME NUMBER OF COLUMNS, SIMILAR DATA TYPE). ONE BELOW THE OTHER. IGNORES DUPLICATES.
-- UNION ALL:	TO COMBINE MULTIPLE TABLES OR QUERIES THAT HAVE SIMILAR RESULT (SAME NUMBER OF COLUMNS, SIMILAR DATA TYPE). ONE BELOW THE OTHER. MAY INCLUDE DUPLICATES.

-- HOW TO STORE ABOVE QUERY IN THE DATABASE FOR EASY RESUSE, EASY DATA ANALYSIS?
CREATE VIEW VW_EMP_MANAGER_REPORT
AS
SELECT EmpID, EmpName, 'N/A' AS MANAGERNAME  FROM EMPLOYEE_DETAILS WHERE EmpManagerID IS NULL
UNION  ALL
SELECT E1.EmpID AS EMPLOYEE_ID, E1.EmpName AS EMPLOYEE_NAME, E2.EmpName AS MANAGER_NAME FROM EMPLOYEE_DETAILS AS E1
INNER JOIN EMPLOYEE_DETAILS AS E2
ON E1.EmpManagerID = E2.EmpID 

SELECT * FROM VW_EMP_MANAGER_REPORT


-- JOIN	:		ONE TABLE	__________		OTHER TABLE
-- UNION:		ONE TABLE	__________		OTHER TABLE
