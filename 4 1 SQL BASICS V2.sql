
STEP 1: GO TO YOUR WINDOWS APPS > SEARCH > "SSMS" > LAUNCH SSMS TOOL
	THEN YOU SEE A PROMPT FOR SERVER NAME.
	SPECIFY THE SERVER NAME > CONNECT.


STEP 2:	RIGHT CLICK THE SERVER >> NEW QUERY. THIS CREATES ONE "SESSION". 
	
	INSIDE THIS SESSION WINDOW, WE NEED TO CAREFULLY COPY PASTE / WRITE THE BELOW QUERIES. 
	SELECT / HIGHLIGHT ONE QUERY AT A TIME > UNDERSTAND IT > EXECUTE IT.

	THE COMMENTS ARE MENTIONED IN -- FOR EASY UNDERSTANDING. 
	YOU NEED NOT SELECT THE COMMENTS DURING EXECUTION. ITS OPTIONAL. 


/********************  PRACTICE EXCERSIZE *************************/

-- QUERY 1: HOW TO CREATE NEW DATABASE?
CREATE DATABASE EMPLOYEEDATABASENEW


TO VERIFY ABOVE DATABASE:	
ON LEFT SIDE (OBJECT EXPLORER) : RIGHT CLICK DATABASES FOLDER > REFRESH. 
THEN EXPAND DATABASES. YOU SEE ABOVE CREATED DATABASE. 
THIS WAY, WE CAN CAN CREATE UPTO 32767 DATABASES PER SERVER. 


-- QUERY 2: HOW TO CONNECT TO ABOVE DATABASE?
USE EMPLOYEEDATABASENEW


TO VERIFY THE CURRENTLY CONNECTED DATABASE:	
SEE THE DATABASE NAME ON TOP LEFT SIDE AND ALSO AT BOTTOM RIGHT SIDE. 
IN LATER CLASSES, WE SHALL VERIFY THE CURRENTLY CONNECTED DATABASE USING QUERY : FUNCTIONS CONCEPT




-- QUERY 3: HOW TO CREATE TABLE IN ABOVE DATABASE?  
-- SELECT ALL BELOW 7 LINES, THEN CLICK @ EXECUTE BUTTON ON TOP MENU.
CREATE TABLE EMPLOYEE_INFO
(
EMPID INT,			-- THIS COLUMN STORES DIGITS [0, -9, 99, ETC...]. INT = INTEGER
EMP_NAME CHAR(30),		-- THIS COLUMN STORES UPTO 30 CHARACTERS [ALPHABETS, DIGITS, SYMBOLS]. FIXED DATA.	USER NAME. 	  GENDER
EMP_COUNTRY VARCHAR(40),	-- THIS COLUMN STORES UPTO 40 CHARACTERS [ALPHABETS, DIGITS, SYMBOLS]. VARYING DATA.	PASSWORD.	  WORK LOCATION
EMPSAL FLOAT			-- THIS COLUMN STORES DECIMALS [0, -9.99, 99.50, ETC...]
)


TO VERIFY ABOVE CREATED TABLE:
ON LEFT SIDE (OBJECT EXPLORER) :  EXPAND THE CURRENTLY CONNECTED DATABASE >> WE SEE TABLES FOLDER. 
EXPAND TABLES FOLDER > WE SEE ABOVE CREATED TABLE. 
THIS WAY, WE CAN CAN CREATE UPTO UNLIMITTED  TABLES PER DATABASE.




-- QUERY 4: HOW TO STORE OR INSERT DATA INTO ABOVE TABLE?   INPUT
-- YOU CAN COPY PASTE ONE STATEMENT AT A TIME. OR ALL BELOW STATEMENTS AT ONCE. THEN EXECUTE. 
INSERT  INTO EMPLOYEE_INFO VALUES (1001, 'SAI', 'CANADA', 999999);
INSERT	INTO EMPLOYEE_INFO VALUES (1002, 'SAM', 'CANADA', 888888);   
INSERT  INTO EMPLOYEE_INFO VALUES (1003, 'JON', 'CANADA', 999999);
INSERT	INTO EMPLOYEE_INFO VALUES (1004, 'AMI', 'CANADA', 777777);
INSERT  INTO EMPLOYEE_INFO VALUES (1005, 'JOE', 'USA', 999999);
INSERT	INTO EMPLOYEE_INFO VALUES (1006, 'AMI', 'USA', 777777);
INSERT	INTO EMPLOYEE_INFO VALUES (1007, 'KIR', 'INDIA', 777777);  
INSERT	INTO EMPLOYEE_INFO VALUES (1008, 'JENY', 'USA', 9999999);
INSERT	INTO EMPLOYEE_INFO VALUES (1009, 'JENISHA', 'INDIA', 99999999);
INSERT	INTO EMPLOYEE_INFO VALUES (1010, 'JOHN', 'CANADA', 999999);
  

-- QUERY 5: HOW TO REPORT ALL EMPLOYEES?					OUTPUT
SELECT * FROM EMPLOYEE_INFO							-- * MEANS TO REPORT ALL COLUMNS


-- QUERY 6 : HOW TO REPORT LIST OF EMPLOYEES ONLY FROM CANADA ?  
-- SYNTAX:	SELECT <<COLUMN-LIST>>  FROM <<TABLE-NAME>> WHERE <<CONDITIONS>>

-- IN ABOVE STATEMENT, "WHERE" KEYWORD IS USED TO FILTER OR SLICE THE DATA. 
-- KEYWORD MEANS A RESERVED (PRDEFINED) WORD IN SQL.

-- EXAMPLE:
SELECT * FROM EMPLOYEE_INFO WHERE EMP_COUNTRY = 'CANADA'


-- IN ABOVE QUERY, WE USE SINGLE QUOTES '  '  FOR CANADA. REASON : IT IS AN ALPHABET. 
-- WE NEED TO USE SINGLE QUOTES FOR ALPHABETS & SYMBOLS. 


-- QUERY 6 : HOW TO REPORT LIST OF EMPLOYEES ONLY FROM CANADA ?  
SELECT * FROM EMPLOYEE_INFO WHERE EMP_COUNTRY = 'CANADA'


-- QUERY 7 : HOW TO REPORT LIST OF EMPLOYEES FROM USA ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_COUNTRY = 'USA'


-- QUERY 8 : HOW TO REPORT LIST OF EMPLOYEES FROM EITHER CANADA OR USA ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_COUNTRY = 'CANADA' OR EMP_COUNTRY = 'USA' 


-- QUERY 9 : HOW TO REPORT LIST OF EMPLOYEES NEITHER FROM CANADA NOR FROM USA ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_COUNTRY != 'CANADA' AND EMP_COUNTRY != 'USA' 


-- QUERY 10 : HOW TO REPORT LIST OF EMPLOYEES WHOSE SALARY IS BETWEEEN 777777 AND 999999 ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMPSAL BETWEEN  777777 AND 999999


-- QUERY 11 : HOW TO REPORT LIST OF EMPLOYEES WHOSE SALARY IS NOT BETWEEEN 777777 AND 999999 ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMPSAL NOT BETWEEN  777777 AND 999999


-- QUERY 12 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME IS 'JENY' ? 
SELECT * FROM EMPLOYEE_INFO WHERE EMP_NAME = 'JENY'


-- PATTERN MATCHING QUERIES USING WILD-CARD CHARACTERS : %, _
-- QUERY 13 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME STARTS WITH LETTER 'J' ?
SELECT * FROM EMPLOYEE_INFO WHERE EMP_NAME LIKE 'J%'		-- % MEANS TO SEARCH FOR ANY NUMBER OF CHARACTERS. 


-- QUERY 14 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME ENDS WITH LETTER 'N' ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_NAME LIKE '%N'		-- % MEANS TO SEARCH FOR ANY NUMBER OF CHARACTERS. 


-- QUERY 15 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME STARTS WITH LETTER 'J' AND ENDS WITH LETTER 'N' ? 
SELECT * FROM EMPLOYEE_INFO WHERE EMP_NAME LIKE 'J%N'


-- QUERY 16 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME STARTS WITH LETTER 'J' AND ENDS WITH LETTER 'N'.
-- THERE SHOULD BE ONLY ONE CHARACTER IN BETWEEN ?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_NAME LIKE 'J_N'		-- _ MEANS TO SEARCH FOR EXACTLY ONE CHARACTER

SELECT * FROM EMPLOYEE_INFO	WHERE EMP_NAME LIKE 'J__N'		-- __ MEANS TO SEARCH FOR EXACTLY TWO CHARACTERS (2 UNDERSCROES)


-- QUERY 17 : HOW TO REPORT LIST OF EMPLOYEES WHOSE NAME DOES NOT START WITH LETTER 'J'?
SELECT * FROM EMPLOYEE_INFO	WHERE EMP_NAME NOT LIKE 'J%'


-- FROM ABOVE,  =, !=, BETWEEN, NOT BETWEEN, LIKE, NOT LIKE ARE CALLED "OPERATORS".



-- QUERY 18:	HOW TO MODIFY THE DATA INSIDE THE TABLE?
UPDATE	EMPLOYEE_INFO  SET EMPSAL = 0

-- HOW TO VERIFY ABOVE UPDATE?
SELECT * FROM EMPLOYEE_INFO


-- QUERY 19:	HOW TO MODIFY THE DATA INSIDE THE TABLE BASED ON A CONDITION?
-- EXAMPLE: HOW TO MODIFY ONLY CANADA EMPLOYEE SALARIES?
UPDATE	EMPLOYEE_INFO  SET EMPSAL = 200000 WHERE EMP_COUNTRY = 'CANADA'

-- HOW TO VERIFY ABOVE UPDATE?
SELECT * FROM EMPLOYEE_INFO


-- QUERY 20:	HOW TO REMOVE ROWS FROM THE TABLE BASED ON A CONDITION?
DELETE FROM	EMPLOYEE_INFO WHERE EMP_COUNTRY = 'CANADA'

-- HOW TO VERIFY ABOVE DELETES?
SELECT * FROM EMPLOYEE_INFO


-- QUERY 21:	HOW TO REMOVE ALL ROWS FROM THE TABLE?
DELETE FROM	EMPLOYEE_INFO 

-- HOW TO VERIFY ABOVE DELETE?
SELECT * FROM EMPLOYEE_INFO

-- QUERY 22:    HOW TO REMOVE ALL ROWS FROM THE TABLE? 
-- TRUNCATE:	SIMILAR TO DELETE. TO REMOVE DATA FROM THE TABLE. BUT DOES NOT ALLLOW CONDITIONS. TRUNCATES ARE NOT LOGGED (AUDITTED) IN DATABASE LOG FILE (ldf).
TRUNCATE TABLE EMPLOYEE_INFO		-- THIS REMOVES ALL ROWS FROM THE TABLE. USED BY DATA ENGINEERS TO PERFORM DATA CLEANUP.
SELECT * FROM EMPLOYEE_INFO


 
-- QUERY 23:		HOW TO ADD A NEW COLUMN TO ABOVE EMPLOYEE TABLE?
-- FORMAT:		ALTER TABLE <<TABLENAME>>  ADD <<COLUMNNAME>> <<DATATYPE>> 
ALTER TABLE EMPLOYEE_INFO ADD [EMP STATUS] BIT		-- BIT IS A DATA TYPE TO STORE Os (INACTIVE) & 1s (ACTIVE).


-- QUERY 24:		HOW TO MODIFY THE DATA TYPE OF A COLUMN ?
-- FORMAT:		ALTER TABLE <<TABLENAME>>  ALTER COLUMN <<COLUMNNAME>> <<NEW DATATYPE>>
ALTER TABLE EMPLOYEE_INFO ALTER COLUMN [EMP STATUS] VARCHAR(2000)			-- MAXIMUM LIMIT : 8000


-- QUERY 25:		HOW TO REMOVE A COLUMN FROM THE TABLE ?
-- FORMAT:		ALTER TABLE <<TABLENAME>>  DROP COLUMN <<COLUMNNAME>> 
ALTER TABLE EMPLOYEE_INFO DROP COLUMN [EMP STATUS]


-- QUERY 26:		HOW TO REMOVE A TABLE FROM THE DATABASE ?
-- FORMAT:		DROP TABLE <<TABLENAME>>
DROP TABLE EMPLOYEE_INFO

SELECT  * FROM EMPLOYEE_INFO   -- WE SEE ERROR. REASON : TABLE DOES NOT EXIST. 


-- QUERY 27:		HOW TO REMOVE A DATABASE FROM THE SERVER ?
-- FORMAT:		DROP DATABASE <<DATABASE>>
USE MASTER		-- MASTER IS A SYSTEM PREDEFINED DATABASE. USED TO CONTROL CONNECTIONS TO SERVER.

DROP DATABASE EMPLOYEEDATABASENEW



/* COMMON QUESTIONS:
-- 1.  WHAT IS THE DIFFERENCE BETWEEN  DELETE & TRUNCATE?
 **	DELETE		:	USED TO REMOVE ALL OR FEW RECORDS FROM THE TABLE. WE CAN SPECIFY CONDITIONS.		MONITORED IN ldf FILE.
	TRUNCATE	:	USED TO REMOVE ALL RECORDS FROM THE TABLE.		  WE CANNOT SPECIFY CONDITIONS.		NOT MONITORED IN ldf FILE. 


 -- 2.  WHAT IS THE DIFFERENCE BETWEEN  UPDATE & ALTER?
   UPDATE		:	 USED TO MODIFY THE DATA.					EXAMPLE : MODIFY SALARY VALUE TO 200000							
   ALTER		:	 USED TO MODIFY THE STRUCTURE OR DEFITION.  EXAMPLE : ADDING A NEW COLUMN; CHANGING EXISTING COLUMN DATA TYPE.				


-- 3.  WHAT IS THE DIFFERENCE BETWEEN  DELETE & DROP?
   DELETE		:	 USED TO REMOVE THE DATA.								
   DROP			:	 USED TO REMOVE THE STRUCTURE OR DEFINITION.			
   
-- 4. WHAT ARE THE BASIC DDL COMMANDS?
	CREATE
	ALTER 
	DROP
	ADD
	TRUNCATE

-- 5. WHAT ARE THE BASIC DML COMMANDS?
	INSERT
	UPDATE  
	DELETE
	MERGE		:	NEXT CHAPTERS

-- 6. OTHER SQL COMMANDS?
	SELECT
	SELECT INTO   : NEXT CONCEPTS
*/













   













