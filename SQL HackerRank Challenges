QUESTION 1

Query all columns for all American cities in CITY with populations larger than 100,000. The CountryCode for America is USA.
Input Format
The CITY table is described as follows:

ID	       NUMBER
NAME	     VARCHAR2(17)
COUNTRYCODE	VARCHAR2(3)
DISTRICT	  VARCHAR2(20)
POPULATION	 NUMBER

Solution-
SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000;
----------------------------------------------------------------------------------------
Question 2

Query the names of all American cities in CITY with populations larger than 120,000. The CountryCode for America is USA.

Input Format

The CITY table is described as follows:

ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER

Solution-

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000;

---------------------------------------------------------------------------------------------------
QUESTION 3-

Query all columns for every row in the CITY table.

Input Format

The CITY table is described as follows:

ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER

Solution-

SELECT * FROM CITY;

------------------------------------------------------------------
QUESTION 4

Query all columns for a city in CITY with the ID 1661.

Input Format

The CITY table is described as follows:
COLUMNS:

ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER

Solution-

SELECT * FROM CITY WHERE ID = 1661; 

-----------------------------------------------------------
QUESTION 5

Query the details for all the Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

Input Format

The CITY table is described as follows:
COLUMNS TYPE:

ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER
Solution

SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';  

---------------------------------------------------------------------------
QUESTION 6

Query the the names of all the Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

The CITY table is described as follows:

Columns Type:
ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER

Solution-
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN'; 

------------------------------------------------------

QUESTION 7

Query a list of CITY and STATE from STATION.

Input Format

The STATION table is described as follows:
Columns Type: 
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER

Solution-

SELECT CITY,STATE FROM STATION; 
-------------------------------------------------------------------
QUESTION 8

Query a list of CITY names from STATION with even ID numbers only. You may print the results in any order, but must exclude duplicates from your answer.

Input Format

The STATION table is described as follows:

Columns Type:
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution-
MYSQL-
SELECT DISTINCT CITY FROM STATION WHERE MOD(ID,2)=0 ORDER BY CITY ASC; 

For MSSQL

SELECT DISTINCT CITY FROM STATION WHERE (ID % 2 ) = 0;
----------------------------------------------------------------------------------------------------

question 9

Let NUM be the number of CITY entries in STATION, and NUMunique be the number of unique cities. Query the value of NUMâˆ’NUMunique from STATION.

In other words, query the number of non-unique CITY names in STATION by subtracting the number of unique CITY entries in the table from the total number of CITY entries in the table.

Input Format

The STATION table is described as follows:
Columns Type:
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution-

SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;    

----------------------------------------------------------------------------------------------

QUESTION 10

Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

Input Format

The STATION table is described as follows:

Columns Type:
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution-
FOR MYSQL 
select CITY,LENGTH(CITY) from STATION order by Length(CITY) asc, CITY limit 1; 
select CITY,LENGTH(CITY) from STATION order by Length(CITY) desc, CITY limit 1; 

FOR MSSQL
SELECT TOP 1 CITY, LEN(CITY) as LENTGHS FROM station GROUP BY CITY ORDER BY LEN(CITY) ASC, CITY ASC
SELECT TOP 1 CITY, LEN(CITY) as LENTGHS FROM station GROUP BY CITY ORDER BY LEN(CITY) DESC, CITY ASC

-----------------------------------------------------------------------------------------------------------

QUESTION 11

Query the list of CITY names starting with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution

SELECT DISTINCT(CITY) FROM STATION WHERE CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' 
OR CITY LIKE 'U%' ORDER BY CITY ASC;  

--------------------------------------------------------------------------------------------------------------

QUESTION 12

Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution-

SELECT DISTINCT(CITY) FROM STATION WHERE CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' 
OR CITY LIKE '%u';  
-----------------------------------------------------------------------------------------

QUESTION 13

Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution-

SELECT DISTINCT CITY 
FROM STATION 
WHERE (
    CITY LIKE 'A%' 
   OR CITY LIKE 'E%' 
   OR CITY LIKE 'I%' 
   OR CITY LIKE 'O%' 
   OR CITY LIKE 'U%'
)
   AND(  
       CITY LIKE '%a' 
   OR CITY LIKE '%e' 
   OR CITY LIKE '%i' 
   OR CITY LIKE '%o' 
   OR CITY LIKE '%u'
   );
---------------------------------------------------------------------------------------------

QUESTION 14

Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
Input Format
The STATION table is described as follows:

Field	/ Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution 1-

SELECT DISTINCT CITY FROM STATION WHERE
( CITY NOT LIKE 'A%' and
CITY NOT LIKE 'E%' and 
CITY NOT LIKE 'I%' and
CITY NOT LIKE 'O%' and 
CITY NOT LIKE 'U%'N)
OR 
(CITY NOT LIKE '%a' and
CITY NOT LIKE '%e' and 
CITY NOT LIKE '%i' and
CITY NOT LIKE '%o' and 
CITY NOT LIKE '%u' );

Solution 2-
SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u') OR LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');  


--------------------------------------------------------------------------------------------------------

QUESTION 15

Query the list of CITY names from STATION that either do not start with vowels and do not end with vowels. Your result cannot contain duplicates.


Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Solution

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u') AND LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');  '

 
------------------------------------------------------------------------------------------------

QUESTION 16

Query the Name of any student in STUDENTS who scored higher than  75 Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.
Input Format

The STUDENTS table is described as follows:

Column	Type
ID	INTEGER
NAME	STRING
MARKS	INTEGER
The Name column only contains uppercase (A-Z) and lowercase (a-z) letters.

Sample Input

ID	NAME	MARKS
1	ASHLEY	81
2	SAMANTHA	75
4	JULIA	76
3	JULIA	84

Sample Output
Ashley Julia Belvet

Explanation
Only Ashley, Julia, and Belvet have Marks > 75. If you look at the last three characters of each of their names, there are no duplicates and 'ley' < 'lia' < 'vet'.

Solution-

SELECT NAME FROM STUDENTS WHERE MARKS > 75 ORDER BY SUBSTR(NAME, LENGTH(NAME)-2, 3), ID;    
---------------------------------------------------------------------------------------------------------------------------
